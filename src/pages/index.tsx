import { SignInButton , SignOutButton, UserButton, useUser } from "@clerk/nextjs";
import { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

import { RouterOutputs, api } from "~/utils/api";

import * as dayjs from 'dayjs'
import relativeTime from "dayjs/plugin/relativeTime";
import { LoaderSpinner, LoadingPage } from "~/components/layout/loading";
import { useState } from "react";

const CreatePostWizard = () => {

  const {user} = useUser();
  const ctx = api.useContext();

  const {mutate, isLoading } = api.posts.create.useMutation({
    onSuccess: () => {
      setInput("");
      void ctx.posts.getAll.invalidate();
    }
  });
  const [input, setInput] = useState<string>("");
  const HandleSubmit = async () => {  
    if (!user) return;
    await mutate({content: input});
  }

  if (!user) return null;

  return (
    <div className="flex gap-3 w-full mt-5 p-3 justify-center items-center">
      <Image src={user.profileImageUrl} className="w-14 h-14 rounded-full" width={100} height={100}  alt="Profile Image"/>
      <input placeholder="Type a Post..." className="bg-transparent  grow outline-none" onChange={(e) => {
        setInput(e.target.value)
      }}value={input}></input>
      {isLoading ? <LoaderSpinner /> : <button className="bg-slate-400 rounded-lg px-4 py-2 text-white" onClick={HandleSubmit}>Post</button>}
    </div>
  )

}

type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostView = (props : PostWithUser) => {

  const {post, author} = props;

  return (
    <div key={post.id} className="flex flex-row gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20 mt-5">
      <Image src={author.profilePictureUrl} className="w-14 h-14 rounded-full" width={100} height={100}  alt="Profile Image"/>
      <div>
        <section className="flex">
          <h3 className="text-slate-400">@{author.name} </h3>
        </section>
        <div className="text-lg">{post.content}</div>
      </div>
    </div>
  )

}

const Feed = () => {


  const {data, isLoading : postsLoading} = api.posts.getAll.useQuery();

  if (!data || postsLoading) return <LoadingPage />;

  if (data.length === 0) return <div> No Posts </div>;

  return (
    <div>
      {data.map((fullpost) => ( 
        <PostView {...fullpost} key={fullpost.post.id}/>
      ))}
    </div>
  )

}

const Home : NextPage = () => {

  const {isLoaded: userLoaded, isSignedIn} = useUser();
  api.posts.getAll.useQuery()
  if (!userLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full md:max-w-2xl border-x border-slate-400 p-4">
          {isSignedIn && <CreatePostWizard/>}
          <Feed />  
        </div>

      </main>
    </>
  );
}

export default Home;

